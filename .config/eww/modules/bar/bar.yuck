;; waybar-lyric: https://github.com/Nadim147c/waybar-lyric
(deflisten lyrics :initial "{}" `waybar-lyric -qdm150 -b47 -fpartial`)
(defvar lyrics_icons `{ "playing": "", "paused": "", "lyric": "", "music": "󰝚", "no_lyric": " " }`)

;; hyprland
(deflisten hyprland_ipc :initial "{}" `eww-hyprland`)
;; network
(deflisten network :initial "{}" `eww-network -fB`)

(defvar spacing 16)

(defwidget hyprland []
    (box
        :class "workspaces"
        :orientation "h"
        :space-evenly true
        :halign "start"
        (for workspace in hyprland_ipc
            (eventbox :cursor "pointer"
                (button
                    :class {workspace.active ? "active-workspace" : "workspace"}
                    :onclick "hyprctl dispatch workspace ${workspace.id}"
                    (label :text "${workspace.active ? "" : workspace.name }" :tooltip "${workspace.hover}")
                )
            )
        )
    )
)

(defwidget player []
    (eventbox
        :cursor "pointer"
        :class "player"
        (button
            :onclick "${EWW_CMD} open media --toggle"
            :onmiddleclick "playerctl --player=${substring(lyrics.info.name, 23, 1000)} play-pause"
            (label :text "${lyrics_icons[lyrics.alt]}  ${lyrics.text}" :tooltip "Click open the player")
        )
    )
)

(defwidget network []
    (label
        :class "network"
        :text "${network.wireless ? " " : " "} ${network.change}"
        :tooltip "${network.table}"
    )
)

(defvar volume_show false)
(defpoll volume_value :interval "2s" `~/.config/eww/modules/bar/audio.sh --volume`)
(defpoll volume_muted :interval "2s" `~/.config/eww/modules/bar/audio.sh --muted`)
(defwidget volume []
    (box :class "volume"
        (eventbox
            :cursor "pointer"
            :onhover "${EWW_CMD} update volume_show=true"
            :onhoverlost "${EWW_CMD} update volume_show=false"
            (box
                :orientation "h"
                :space-evenly false
                :spacing 0
                (revealer
                    :transition "slideleft"
                    :reveal volume_show
                    :duration "400ms"
                    (scale :min 0 :max 100 :value {volume_value} :width 100 :orientation "h"
                        :onchange `${EWW_CMD} update volume_value={} && wpctl set-volume @DEFAULT_SINK@ {}%`
                    )
                )
                (button
                    :onclick `wpctl set-mute @DEFAULT_SINK@ toggle && ${EWW_CMD} update volume_muted=$(~/.config/eww/modules/bar/audio.sh --muted)`
                    "${volume_muted ? "" : ""}   ${volume_value}%"
                )
            )
        )
    )
)

(defwidget clock []
    (box :class "clock"
        (eventbox
            :cursor "pointer"
            (button :onclick "${EWW_CMD} open calendar --toggle"
                "  ${formattime(EWW_TIME, "%I:%M%p")}"
            )
        )
    )
)

(defvar power_show false)
(defwidget power []
    (eventbox
        :class "power"
        :onhover "${EWW_CMD} update power_show=true"
        :onhoverlost "${EWW_CMD} update power_show=false"
        (box
            :orientation "h"
            :space-evenly false
            :spacing 0
            (revealer
                :class "revealer"
                :transition "slideleft"
				:reveal power_show
				:duration "400ms"
                (box
                    :spacing 0
                    (eventbox :cursor "pointer"
                        (button
                            :class "lock"
                            :onclick `confirm.nu -c Cencel -o Lock -d "Lock your current sesssion?" "hyprctl dispatch exec -- hyprlock"`
                            (label :text "" :tooltip "Lock")
                        )
                    )
                    (eventbox :cursor "pointer"
                        (button
                            :class "logout"
                            :onclick `confirm.nu -c Cencel -o Lock -d "Exit your current sesssion?" "hyprctl dispatch exit"`
                            (label :text "󰍃" :tooltip "Logout")
                        )
                    )
                    (eventbox :cursor "pointer"
                        (button
                            :class "sleep"
                            :onclick `confirm.nu -c Cencel -o Sleep -d "Sleep your computer?" "systemctl suspend"`
                            (label :text "󰒲" :tooltip "Sleep")
                        )
                    )
                    (eventbox :cursor "pointer"
                        (button
                            :class "reboot"
                            :onclick `confirm.nu -c Cencel -o Reboot -d "Reboot your computer?" "systemctl reboot"`
                            (label :text "" :tooltip "Reboot")
                        )
                    )
                    (eventbox :cursor "pointer"
                        (button
                            :class "power"
                            :onclick `confirm.nu -c Cencel -o Shutdown -d "Shutdown your computer?" "systemctl poweroff"`
                            (label :text "" :tooltip "Shutdown")
                        )
                    )
                )
            )
            (eventbox :cursor "pointer"
                (button :onclick "swaync-client --open-panel"
                    (label :class "menu-button" :text "󰇙" :tooltip "Control Center")
                )
            )
        )
    )
)


(defwidget action_row []
	(box
        :class "action-row"
        :orientation "h"
        :space-evenly false
        :spacing 0
        (eventbox
            :cursor "pointer"
            (button
                :class "wallpaper"
                :onclick "${EWW_CMD} open wallpaper --toggle"
                "󰸉"
            )
        )
    )
)


(defwidget left []
	(box
        :class "left"
        :orientation "h"
        :halign "start"
        :space-evenly false
        (hyprland)
        (systray :class "systray" :spacing 5 :icon-size 17 :prepend-new true)
    )
)

(defwidget center []
	(box
        :class "center"
        :orientation "v"
        :valign "center"
            (player)
    )
)

(defwidget right []
	(box
        :class "right"
        :orientation "h"
        :halign "end"
        :space-evenly false
        (network)
        (volume)
        (clock)
        (action_row)
        (power)
    )
)

(defwindow bar
    :monitor 0
    :stacking "bottom"
    :windowtype "dock"
    :wm-ignore false
    :exclusive true
	:geometry (geometry :x "0%" :y "0%" :height "35px" :width "100%" :anchor "center top")
    (centerbox
        :class "eww-bar"
        :orientation "h"
        (left)
        (center)
        (right)
    )
)
